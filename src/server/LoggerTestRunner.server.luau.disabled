--!strict
-- LoggerTestRunner.server.luau
-- Server-side script to run Logger tests when the game starts

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ServerScriptService = game:GetService("ServerScriptService")

local Logger = require(ReplicatedStorage.util.Logger)
local ServerData = require(script.Parent.modules.ServerData)

-- Initialize ServerData
ServerData:Init()

print("=== Logger Test Runner ===")
print("ServerData initialized")

-- Run the server-side test
local function runServerTest()
	print("Running server-side Logger test...")

	local testModule = ServerScriptService.server.tests["LoggerTest.spec"]
	local success = require(testModule)

	if success then
		print("Server-side Logger test completed successfully!")
	else
		Logger.warn("Server-side Logger test failed!")
	end
end

-- Apply logger middleware to ServerData's game producer
local function applyLoggerToGameProducer()
	print("Applying logger middleware to game producer...")

	local function createLoggerMiddleware()
		return function(producer)
			print("[Server-Reflex-Logger]: Mounted with state " .. tostring(producer:getState()))

			producer:subscribe(function(state)
				print("[Server-Reflex-Logger]: Game state changed to " .. tostring(state))
			end)

			return function(dispatch: (...any) -> ...any, name: string): (...any) -> ...any
				return function(...: any): ...any
					local arguments: { [number]: any, n: number } = table.pack(...)
					local argStrings: { string } = {}

					for index = 1, arguments.n do
						table.insert(argStrings, tostring(arguments[index]))
					end

					print(
						"[Server-Reflex-Logger]: Dispatching " .. name .. "(" .. table.concat(argStrings, ", ") .. ")"
					)

					return dispatch(...)
				end
			end
		end
	end

	-- Apply middleware to game producer
	ServerData.gameProducer:applyMiddleware(createLoggerMiddleware())
	print("Logger middleware applied to game producer")
end

-- Run tests
task.spawn(function()
	-- Wait a moment for everything to initialize
	task.wait(1)

	-- Apply logger to game producer
	applyLoggerToGameProducer()

	-- Run server test
	runServerTest()

	print("Logger test runner completed!")
end)

return true
